Основные команды для git:
НУЖНО ИСПОЛЬЗОВАТЬ ДВОЙНЫЕ КАВЫЧКИ

----------------------
git init - инициализация репозитория в указанной папке
----------------------
git remote add origin (сюда копируем адрес с гита) - установка соединения между локальным и удалённым хранилищем
----------------------
git add <файл> - добавление файла или изменений по существующему файлу в индекс нашего репозитория
----------------------
git add . - добавить все новые файлы в индекс нашего репозитория (чтобы не указывать все добавленные файлы)
----------------------
git restore <файл> - откатить изменения по файлу к состоянию предыдущего коммита
----------------------
git status - просмотр статуса нашего репозитория
----------------------
git commit - создать коммит. Далее откроется специальная панель, чтобы добавить сообщение к коммиту.
i - начать набирать сообщение. Набираем. Далее Escape -> : -> wq (w - записать, q - выйти) -> Enter
----------------------
git commit -m 'Сообщение' - создать коммит без открытия консоли с указанием сообщения сразу.
----------------------
git commit -am 'Сообщение' - создать коммит с одновременным выполнением команды git add. 
Автоматически добавит все изменения в индекс.
----------------------
git log - показать подробную информацию по изменению (покажет все коммиты)
----------------------
git log --oneline - показать сжатую информацию по изменениям
----------------------
git reset <хэш коммита> - откатить такой-то коммит
----------------------
gir reflog - показать историю по ВСЕМ изменениям (в том числе по удалению коммитов)
----------------------
git restore - сброс конкретного файла на состояние конкретного коммита
----------------------
git branch - посмотреть, на какой ветке мы сейчас находимся
----------------------
git branch <название ветки> - создать новую ветку
----------------------
git branch <название ветки> <точка старта> - создать новую ветку, которая будет начинаться с точки старта (название ветки, с которой нам и нужно стартовать)
----------------------
git checkout <название ветки, на которую хотим переключиться> - переключение на соответствующую ветку
----------------------
git checkout -b <название ветки> - создание и переключение на соответствующую ветку одной командой
----------------------
git push -u origin <название ветки> - загружает изменения с текущей ветки на удаленную 
(с указанным названием) на удаленный репозиторий
Используется при первой загрузке, когда такой ветки нет на удаленном репозитрии
----------------------
git push - загрузка изменений с текущей ветки на удаленную.
Используется, когда такая ветка уже есть на удаленном репозитории
----------------------
git pull - загрузить изменения с удаленного репозитория
----------------------
git fetch - синхронизировать данные с удаленным репозиторием
----------------------
git merge <название ветки> - зальёт в текущую ветку все изменения из указанной ветки
----------------------
git branch -d <название ветки, можно несколько> - удалить указанные ветки с локального репозитория
----------------------
git push origin --delete <название ветки, можно несколько> - удалить ветки с удаленного репозитория
----------------------
git rebase <название ветки> - меняет точку старта нашей ветки на последней коммит указанной ветки
----------------------
git push --force - загрузка изменений с текущей ветки на удаленную. Используется после rebase
----------------------
git tag <название тега (обычно это версия)> - присвоить текущему коммиту определенную версию
----------------------
git tag - получить текущую версию
----------------------
git tag --list - получить все версии
----------------------
git push --tags - загрузить изменения по версиям на удаленный репозиторий
----------------------
git tag -d <версия> - удалить тег (версию)
----------------------
git push --delete <версия> - удалить версию с удаленного репозитория
----------------------
----------------------
----------------------
----------------------
----------------------
----------------------
----------------------
----------------------
